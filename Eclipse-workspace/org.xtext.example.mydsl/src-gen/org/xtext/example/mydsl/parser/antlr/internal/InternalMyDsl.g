/*
 * generated by Xtext 2.37.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Story";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleStory
entryRuleStory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoryRule()); }
	iv_ruleStory=ruleStory
	{ $current=$iv_ruleStory.current; }
	EOF;

// Rule Story
ruleStory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='STORY'
		{
			newLeafNode(otherlv_0, grammarAccess.getStoryAccess().getSTORYKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStoryAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStoryAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStoryAccess().getStateStateParserRuleCall_3_0());
				}
				lv_state_3_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoryRule());
					}
					set(
						$current,
						"state",
						lv_state_3_0,
						"org.xtext.example.mydsl.MyDsl.State");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStoryAccess().getChaptersChapterParserRuleCall_4_0());
				}
				lv_chapters_4_0=ruleChapter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoryRule());
					}
					add(
						$current,
						"chapters",
						lv_chapters_4_0,
						"org.xtext.example.mydsl.MyDsl.Chapter");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getStoryAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='STATE'
		{
			newLeafNode(otherlv_0, grammarAccess.getStateAccess().getSTATEKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getPropertiesPropertyParserRuleCall_2_0());
				}
				lv_properties_2_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					add(
						$current,
						"properties",
						lv_properties_2_0,
						"org.xtext.example.mydsl.MyDsl.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PROPERTY'
		{
			newLeafNode(otherlv_0, grammarAccess.getPropertyAccess().getPROPERTYKeyword_0());
		}
		otherlv_1='name'
		{
			newLeafNode(otherlv_1, grammarAccess.getPropertyAccess().getNameKeyword_1());
		}
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getPropertyAccess().getEqualsSignKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getPropertyAccess().getCommaKeyword_4());
		}
		otherlv_5='type'
		{
			newLeafNode(otherlv_5, grammarAccess.getPropertyAccess().getTypeKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getPropertyAccess().getEqualsSignKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getTypeTypeEnumRuleCall_7_0());
				}
				lv_type_7_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"type",
						lv_type_7_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=','
		{
			newLeafNode(otherlv_8, grammarAccess.getPropertyAccess().getCommaKeyword_8());
		}
		otherlv_9='value'
		{
			newLeafNode(otherlv_9, grammarAccess.getPropertyAccess().getValueKeyword_9());
		}
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getPropertyAccess().getEqualsSignKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getValueValueParserRuleCall_11_0());
				}
				lv_value_11_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"value",
						lv_value_11_0,
						"org.xtext.example.mydsl.MyDsl.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleChapter
entryRuleChapter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChapterRule()); }
	iv_ruleChapter=ruleChapter
	{ $current=$iv_ruleChapter.current; }
	EOF;

// Rule Chapter
ruleChapter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CHAPTER'
		{
			newLeafNode(otherlv_0, grammarAccess.getChapterAccess().getCHAPTERKeyword_0());
		}
		otherlv_1='id'
		{
			newLeafNode(otherlv_1, grammarAccess.getChapterAccess().getIdKeyword_1());
		}
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getChapterAccess().getEqualsSignKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getChapterAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChapterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getChapterAccess().getCommaKeyword_4());
		}
		otherlv_5='entrances'
		{
			newLeafNode(otherlv_5, grammarAccess.getChapterAccess().getEntrancesKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getChapterAccess().getEqualsSignKeyword_6());
		}
		otherlv_7='('
		{
			newLeafNode(otherlv_7, grammarAccess.getChapterAccess().getLeftParenthesisKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChapterAccess().getEntrancesStartPointParserRuleCall_8_0());
				}
				lv_entrances_8_0=ruleStartPoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChapterRule());
					}
					add(
						$current,
						"entrances",
						lv_entrances_8_0,
						"org.xtext.example.mydsl.MyDsl.StartPoint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getChapterAccess().getRightParenthesisKeyword_9());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getChapterAccess().getLeftCurlyBracketKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChapterAccess().getScenariosScenarioParserRuleCall_11_0());
				}
				lv_scenarios_11_0=ruleScenario
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChapterRule());
					}
					add(
						$current,
						"scenarios",
						lv_scenarios_11_0,
						"org.xtext.example.mydsl.MyDsl.Scenario");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getChapterAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleStartPoint
entryRuleStartPoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartPointRule()); }
	iv_ruleStartPoint=ruleStartPoint
	{ $current=$iv_ruleStartPoint.current; }
	EOF;

// Rule StartPoint
ruleStartPoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getStartPointAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartPointRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getStartPointAccess().getCommaKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartPointRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getStartPointAccess().getScenarioIdScenarioCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleScenario
entryRuleScenario returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScenarioRule()); }
	iv_ruleScenario=ruleScenario
	{ $current=$iv_ruleScenario.current; }
	EOF;

// Rule Scenario
ruleScenario returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SCENARIO'
		{
			newLeafNode(otherlv_0, grammarAccess.getScenarioAccess().getSCENARIOKeyword_0());
		}
		otherlv_1='id'
		{
			newLeafNode(otherlv_1, grammarAccess.getScenarioAccess().getIdKeyword_1());
		}
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getScenarioAccess().getEqualsSignKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getScenarioAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScenarioRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getTextTextParserRuleCall_5_0());
				}
				lv_text_5_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					set(
						$current,
						"text",
						lv_text_5_0,
						"org.xtext.example.mydsl.MyDsl.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getScenarioAccess().getChoicesChoiceParserRuleCall_6_0_0());
					}
					lv_choices_6_0=ruleChoice
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScenarioRule());
						}
						add(
							$current,
							"choices",
							lv_choices_6_0,
							"org.xtext.example.mydsl.MyDsl.Choice");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			    |
			otherlv_7='END'
			{
				newLeafNode(otherlv_7, grammarAccess.getScenarioAccess().getENDKeyword_6_1());
			}
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getScenarioAccess().getGotoGoToChapterParserRuleCall_6_2_0());
					}
					lv_goto_8_0=ruleGoToChapter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScenarioRule());
						}
						set(
							$current,
							"goto",
							lv_goto_8_0,
							"org.xtext.example.mydsl.MyDsl.GoToChapter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TEXT'
		{
			newLeafNode(otherlv_0, grammarAccess.getTextAccess().getTEXTKeyword_0());
		}
		(
			(
				lv_text_1_0=RULE_STRING
				{
					newLeafNode(lv_text_1_0, grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleChoice
entryRuleChoice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChoiceRule()); }
	iv_ruleChoice=ruleChoice
	{ $current=$iv_ruleChoice.current; }
	EOF;

// Rule Choice
ruleChoice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CHOICE'
		{
			newLeafNode(otherlv_0, grammarAccess.getChoiceAccess().getCHOICEKeyword_0());
		}
		otherlv_1='scenarioId'
		{
			newLeafNode(otherlv_1, grammarAccess.getChoiceAccess().getScenarioIdKeyword_1());
		}
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getChoiceAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChoiceRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getChoiceAccess().getScenarioIdScenarioCrossReference_3_0());
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getChoiceAccess().getCommaKeyword_4());
		}
		otherlv_5='description'
		{
			newLeafNode(otherlv_5, grammarAccess.getChoiceAccess().getDescriptionKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getChoiceAccess().getEqualsSignKeyword_6());
		}
		(
			(
				lv_description_7_0=RULE_STRING
				{
					newLeafNode(lv_description_7_0, grammarAccess.getChoiceAccess().getDescriptionSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChoiceRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getChoiceAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChoiceAccess().getStateChangesStateChangeParserRuleCall_8_1_0());
					}
					lv_stateChanges_9_0=ruleStateChange
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChoiceRule());
						}
						add(
							$current,
							"stateChanges",
							lv_stateChanges_9_0,
							"org.xtext.example.mydsl.MyDsl.StateChange");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getChoiceAccess().getCommaKeyword_8_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getChoiceAccess().getStateChangesStateChangeParserRuleCall_8_2_1_0());
						}
						lv_stateChanges_11_0=ruleStateChange
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getChoiceRule());
							}
							add(
								$current,
								"stateChanges",
								lv_stateChanges_11_0,
								"org.xtext.example.mydsl.MyDsl.StateChange");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleStateChange
entryRuleStateChange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateChangeRule()); }
	iv_ruleStateChange=ruleStateChange
	{ $current=$iv_ruleStateChange.current; }
	EOF;

// Rule StateChange
ruleStateChange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateChangeRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getStateChangeAccess().getVariablePropertyCrossReference_0_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStateChangeAccess().getOperatorOperatorEnumRuleCall_1_0());
				}
				lv_operator_1_0=ruleOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateChangeRule());
					}
					set(
						$current,
						"operator",
						lv_operator_1_0,
						"org.xtext.example.mydsl.MyDsl.Operator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStateChangeAccess().getValueValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateChangeRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.MyDsl.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGoToChapter
entryRuleGoToChapter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoToChapterRule()); }
	iv_ruleGoToChapter=ruleGoToChapter
	{ $current=$iv_ruleGoToChapter.current; }
	EOF;

// Rule GoToChapter
ruleGoToChapter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GOTOCHAPTER'
		{
			newLeafNode(otherlv_0, grammarAccess.getGoToChapterAccess().getGOTOCHAPTERKeyword_0());
		}
		otherlv_1='chapterId'
		{
			newLeafNode(otherlv_1, grammarAccess.getGoToChapterAccess().getChapterIdKeyword_1());
		}
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getGoToChapterAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoToChapterRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getGoToChapterAccess().getChapterIdChapterCrossReference_3_0());
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getGoToChapterAccess().getCommaKeyword_4());
		}
		otherlv_5='entrance'
		{
			newLeafNode(otherlv_5, grammarAccess.getGoToChapterAccess().getEntranceKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getGoToChapterAccess().getEqualsSignKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoToChapterRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getGoToChapterAccess().getEntranceStartPointCrossReference_7_0());
				}
			)
		)
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current.getText(); }
	EOF;

// Rule Value
ruleValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getValueAccess().getINTTerminalRuleCall_1());
		}
		    |
		(
			kw='true'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getValueAccess().getTrueKeyword_2_0());
			}
			    |
			kw='false'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getValueAccess().getFalseKeyword_2_1());
			}
		)
	)
;

// Rule Type
ruleType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='TEXT'
			{
				$current = grammarAccess.getTypeAccess().getTEXTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeAccess().getTEXTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='NUMBER'
			{
				$current = grammarAccess.getTypeAccess().getNUMBEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeAccess().getNUMBEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='YES/NO'
			{
				$current = grammarAccess.getTypeAccess().getBOOLEANEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeAccess().getBOOLEANEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='LIST'
			{
				$current = grammarAccess.getTypeAccess().getLISTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTypeAccess().getLISTEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule Operator
ruleOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='='
			{
				$current = grammarAccess.getOperatorAccess().getASSIGNEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperatorAccess().getASSIGNEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='+'
			{
				$current = grammarAccess.getOperatorAccess().getPLUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperatorAccess().getPLUSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='-'
			{
				$current = grammarAccess.getOperatorAccess().getMINUSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOperatorAccess().getMINUSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='*'
			{
				$current = grammarAccess.getOperatorAccess().getMULTIPLYEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOperatorAccess().getMULTIPLYEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='/'
			{
				$current = grammarAccess.getOperatorAccess().getDIVIDEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getOperatorAccess().getDIVIDEEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
